// Generated by view binder compiler. Do not edit!
package cn.edu.seu.cose.imusic.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ListView;
import android.widget.SeekBar;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import cn.edu.seu.cose.imusic.R;
import cn.edu.seu.cose.imusic.util.MusicFrequencyView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonPlayNext;

  @NonNull
  public final Button buttonPlayPre;

  @NonNull
  public final Button buttonPlayStop;

  @NonNull
  public final ConstraintLayout fragmentHome;

  @NonNull
  public final ConstraintLayout layoutBottomBar;

  @NonNull
  public final ConstraintLayout layoutTop;

  @NonNull
  public final ListView listviewSongs;

  @NonNull
  public final FrameLayout musicList;

  @NonNull
  public final FrameLayout musicLrc;

  @NonNull
  public final ConstraintLayout musicPlay;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final Switch switchPage;

  @NonNull
  public final TextView textHome;

  @NonNull
  public final TextView textMusicInfo;

  @NonNull
  public final TextView textMusicState;

  @NonNull
  public final TextView textMusicVoice;

  @NonNull
  public final TextView textTime;

  @NonNull
  public final TextView textTotaltime;

  @NonNull
  public final MusicFrequencyView viewMusicFrequency;

  @NonNull
  public final ViewPager viewpager;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonPlayNext,
      @NonNull Button buttonPlayPre, @NonNull Button buttonPlayStop,
      @NonNull ConstraintLayout fragmentHome, @NonNull ConstraintLayout layoutBottomBar,
      @NonNull ConstraintLayout layoutTop, @NonNull ListView listviewSongs,
      @NonNull FrameLayout musicList, @NonNull FrameLayout musicLrc,
      @NonNull ConstraintLayout musicPlay, @NonNull SeekBar seekBar, @NonNull Switch switchPage,
      @NonNull TextView textHome, @NonNull TextView textMusicInfo, @NonNull TextView textMusicState,
      @NonNull TextView textMusicVoice, @NonNull TextView textTime, @NonNull TextView textTotaltime,
      @NonNull MusicFrequencyView viewMusicFrequency, @NonNull ViewPager viewpager) {
    this.rootView = rootView;
    this.buttonPlayNext = buttonPlayNext;
    this.buttonPlayPre = buttonPlayPre;
    this.buttonPlayStop = buttonPlayStop;
    this.fragmentHome = fragmentHome;
    this.layoutBottomBar = layoutBottomBar;
    this.layoutTop = layoutTop;
    this.listviewSongs = listviewSongs;
    this.musicList = musicList;
    this.musicLrc = musicLrc;
    this.musicPlay = musicPlay;
    this.seekBar = seekBar;
    this.switchPage = switchPage;
    this.textHome = textHome;
    this.textMusicInfo = textMusicInfo;
    this.textMusicState = textMusicState;
    this.textMusicVoice = textMusicVoice;
    this.textTime = textTime;
    this.textTotaltime = textTotaltime;
    this.viewMusicFrequency = viewMusicFrequency;
    this.viewpager = viewpager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_play_next;
      Button buttonPlayNext = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayNext == null) {
        break missingId;
      }

      id = R.id.button_play_pre;
      Button buttonPlayPre = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayPre == null) {
        break missingId;
      }

      id = R.id.button_play_stop;
      Button buttonPlayStop = ViewBindings.findChildViewById(rootView, id);
      if (buttonPlayStop == null) {
        break missingId;
      }

      ConstraintLayout fragmentHome = (ConstraintLayout) rootView;

      id = R.id.layout_bottom_bar;
      ConstraintLayout layoutBottomBar = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottomBar == null) {
        break missingId;
      }

      id = R.id.layout_top;
      ConstraintLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.listview_songs;
      ListView listviewSongs = ViewBindings.findChildViewById(rootView, id);
      if (listviewSongs == null) {
        break missingId;
      }

      id = R.id.music_list;
      FrameLayout musicList = ViewBindings.findChildViewById(rootView, id);
      if (musicList == null) {
        break missingId;
      }

      id = R.id.music_lrc;
      FrameLayout musicLrc = ViewBindings.findChildViewById(rootView, id);
      if (musicLrc == null) {
        break missingId;
      }

      id = R.id.music_play;
      ConstraintLayout musicPlay = ViewBindings.findChildViewById(rootView, id);
      if (musicPlay == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.switch_page;
      Switch switchPage = ViewBindings.findChildViewById(rootView, id);
      if (switchPage == null) {
        break missingId;
      }

      id = R.id.text_home;
      TextView textHome = ViewBindings.findChildViewById(rootView, id);
      if (textHome == null) {
        break missingId;
      }

      id = R.id.text_music_info;
      TextView textMusicInfo = ViewBindings.findChildViewById(rootView, id);
      if (textMusicInfo == null) {
        break missingId;
      }

      id = R.id.text_music_state;
      TextView textMusicState = ViewBindings.findChildViewById(rootView, id);
      if (textMusicState == null) {
        break missingId;
      }

      id = R.id.text_music_voice;
      TextView textMusicVoice = ViewBindings.findChildViewById(rootView, id);
      if (textMusicVoice == null) {
        break missingId;
      }

      id = R.id.text_time;
      TextView textTime = ViewBindings.findChildViewById(rootView, id);
      if (textTime == null) {
        break missingId;
      }

      id = R.id.text_totaltime;
      TextView textTotaltime = ViewBindings.findChildViewById(rootView, id);
      if (textTotaltime == null) {
        break missingId;
      }

      id = R.id.view_music_frequency;
      MusicFrequencyView viewMusicFrequency = ViewBindings.findChildViewById(rootView, id);
      if (viewMusicFrequency == null) {
        break missingId;
      }

      id = R.id.viewpager;
      ViewPager viewpager = ViewBindings.findChildViewById(rootView, id);
      if (viewpager == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, buttonPlayNext, buttonPlayPre,
          buttonPlayStop, fragmentHome, layoutBottomBar, layoutTop, listviewSongs, musicList,
          musicLrc, musicPlay, seekBar, switchPage, textHome, textMusicInfo, textMusicState,
          textMusicVoice, textTime, textTotaltime, viewMusicFrequency, viewpager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
